<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inyu.dal.master.QuartzProxyMapper">
  <resultMap id="BaseResultMap" type="com.inyu.entity.QuartzProxy">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="port" jdbcType="VARCHAR" property="port" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="spread" jdbcType="REAL" property="spread" />
    <result column="last_validate" jdbcType="TIMESTAMP" property="lastValidate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from quartz_proxy
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.inyu.entity.QuartzProxy">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into quartz_proxy (id, ip, port, 
      `status`, `location`, `type`, 
      spread, last_validate)
    values (#{id,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR}, #{port,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{location,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{spread,jdbcType=REAL}, #{lastValidate,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.inyu.entity.QuartzProxy">
    update quartz_proxy
    set ip = #{ip,jdbcType=VARCHAR},
      port = #{port,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      `location` = #{location,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      spread = #{spread,jdbcType=REAL},
      last_validate = #{lastValidate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    
    select id, ip, port, `status`, `location`, `type`, spread, last_validate
    from quartz_proxy
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, ip, port, `status`, `location`, `type`, spread, last_validate
    from quartz_proxy
  </select>  
  
  <select id="selectProxyListByStatus"   parameterType="map" resultMap="BaseResultMap">
    select id, ip, port, `status`, `location`, `type`, spread, last_validate
    from quartz_proxy
     where status = #{status}
  </select>

  <select id="queryProxyByIp" parameterType="map" resultMap="BaseResultMap">
    select id, ip, port, `status`, `location`, `type`, spread, last_validate
    from quartz_proxy
    where ip = #{ip}
  </select>
</mapper>